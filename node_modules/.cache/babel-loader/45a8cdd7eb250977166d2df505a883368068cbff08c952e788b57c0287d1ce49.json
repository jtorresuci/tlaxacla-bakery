{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport ReactGA from 'react-ga';\nconst GoogleAnalytics = _ref => {\n  _s();\n  let {\n    trackingId\n  } = _ref;\n  useEffect(() => {\n    // Initialize Google Analytics\n    ReactGA.initialize(trackingId);\n\n    // Send pageview event on route change\n    const handleRouteChange = url => {\n      ReactGA.pageview(url);\n    };\n    window.addEventListener('routeChangeComplete', handleRouteChange);\n    return () => {\n      window.removeEventListener('routeChangeComplete', handleRouteChange);\n    };\n  }, [trackingId]);\n  useEffect(() => {\n    // Track user information on mount\n    ReactGA.set({\n      dimension1: navigator.language,\n      // User's language\n      dimension2: new Date().getTimezoneOffset(),\n      // User's timezone offset in minutes\n      dimension3: window.screen.width,\n      // User's screen width\n      dimension4: window.screen.height,\n      // User's screen height\n      dimension5: window.navigator.userAgent // User's user agent string\n    });\n  }, []);\n  return null;\n};\n_s(GoogleAnalytics, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = GoogleAnalytics;\nexport default GoogleAnalytics;\nvar _c;\n$RefreshReg$(_c, \"GoogleAnalytics\");","map":{"version":3,"names":["React","useEffect","ReactGA","GoogleAnalytics","trackingId","initialize","handleRouteChange","url","pageview","window","addEventListener","removeEventListener","set","dimension1","navigator","language","dimension2","Date","getTimezoneOffset","dimension3","screen","width","dimension4","height","dimension5","userAgent"],"sources":["/Users/josetorres/Desktop/tlaxcala-bakery/frontend/src/components/GoogleAnalytics.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport ReactGA from 'react-ga';\n\nconst GoogleAnalytics = ({ trackingId }) => {\n  useEffect(() => {\n    // Initialize Google Analytics\n    ReactGA.initialize(trackingId);\n\n    // Send pageview event on route change\n    const handleRouteChange = (url) => {\n      ReactGA.pageview(url);\n    };\n    window.addEventListener('routeChangeComplete', handleRouteChange);\n    return () => {\n      window.removeEventListener('routeChangeComplete', handleRouteChange);\n    };\n  }, [trackingId]);\n\n  useEffect(() => {\n    // Track user information on mount\n    ReactGA.set({ \n      dimension1: navigator.language, // User's language\n      dimension2: new Date().getTimezoneOffset(), // User's timezone offset in minutes\n      dimension3: window.screen.width, // User's screen width\n      dimension4: window.screen.height, // User's screen height\n      dimension5: window.navigator.userAgent, // User's user agent string\n    });\n  }, []);\n\n  return null;\n};\n\nexport default GoogleAnalytics;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,UAAU;AAE9B,MAAMC,eAAe,GAAG,QAAoB;EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC;EACrCH,SAAS,CAAC,MAAM;IACd;IACAC,OAAO,CAACG,UAAU,CAACD,UAAU,CAAC;;IAE9B;IACA,MAAME,iBAAiB,GAAIC,GAAG,IAAK;MACjCL,OAAO,CAACM,QAAQ,CAACD,GAAG,CAAC;IACvB,CAAC;IACDE,MAAM,CAACC,gBAAgB,CAAC,qBAAqB,EAAEJ,iBAAiB,CAAC;IACjE,OAAO,MAAM;MACXG,MAAM,CAACE,mBAAmB,CAAC,qBAAqB,EAAEL,iBAAiB,CAAC;IACtE,CAAC;EACH,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAEhBH,SAAS,CAAC,MAAM;IACd;IACAC,OAAO,CAACU,GAAG,CAAC;MACVC,UAAU,EAAEC,SAAS,CAACC,QAAQ;MAAE;MAChCC,UAAU,EAAE,IAAIC,IAAI,EAAE,CAACC,iBAAiB,EAAE;MAAE;MAC5CC,UAAU,EAAEV,MAAM,CAACW,MAAM,CAACC,KAAK;MAAE;MACjCC,UAAU,EAAEb,MAAM,CAACW,MAAM,CAACG,MAAM;MAAE;MAClCC,UAAU,EAAEf,MAAM,CAACK,SAAS,CAACW,SAAS,CAAE;IAC1C,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI;AACb,CAAC;AAAC,GA3BItB,eAAe;AAAA,KAAfA,eAAe;AA6BrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}